syntax = "proto3";

package regen.ecocredit.contract.v1alpha1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/orm/v1/orm.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "regen/ecocredit/contract/v1alpha1/types.proto";

// Contract defines a forward contract and the table within which forward
// contracts are stored.
message Contract {
  option (cosmos.orm.v1.table) = {
    id : 1,
    primary_key : {fields : "id", auto_increment : true}
  };

  // id is the table row identifier of the contract.
  uint64 id = 1;

  // project_id is the unique identifier of the project.
  string project_id = 2;

  // status is the status of the contract (e.g. "proposed", "approved").
  Status status = 3;

  // metadata is any arbitrary string that includes or references additional
  // information about the contract including the initial amount of funds to
  // collect, the initial volume percentage offered, estimated total supply,
  // forward contract supply, and estimated price per credit type unit.
  google.protobuf.Timestamp metadata = 4;

  // volume_percentage is the remaining percent of all credits issued that
  // are be available to claim.
  string volume_percentage = 5;

  // funds_to_collect is the denom and remaining amount of funds the project
  // is collecting.
  cosmos.base.v1beta1.Coin funds_to_collect = 6;

  // start_date is the delivery start date.
  google.protobuf.Timestamp start_date = 7 [ (gogoproto.stdtime) = true ];

  // end_date is the delivery end date.
  google.protobuf.Timestamp end_date = 8 [ (gogoproto.stdtime) = true ];
}

// ContractReserve defines a forward contract reserve (aka "buffer pool")
// and the table within which forward contract reserves are stored.
message ContractReserve {
  option (cosmos.orm.v1.table) = {
    id : 2,
    primary_key : {fields : "contract_id"}
  };

  // contract_id is the table row identifier of the contract.
  uint64 contract_id = 1;

  // balances is the list of credit batch balances held in the reserve.
  repeated Balances balances = 2;

  message Balances {

    // batch_denom is the amount of tradable credits in the reserve.
    string batch_denom = 1;

    // tradable_amount is the amount of tradable credits in the reserve.
    string tradable_amount = 2;
  }
}
